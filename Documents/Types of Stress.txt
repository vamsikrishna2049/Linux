To apply constant stress to a system, you can use various tools and techniques depending on the type of stress you want to simulate. Here are a few approaches:

### 1. **CPU Stress:**
You can use tools like `stress` or `cpuburn` to continuously stress the CPU. Install the stress tool if you haven't already:

```bash
sudo yum install stress
```

Then apply constant CPU stress:

```bash
stress --cpu <number_of_CPU_cores>
```

Replace `<number_of_CPU_cores>` with the number of CPU cores you want to stress.

### 2. **Memory Stress:**
To stress the memory, you can use tools like `stress` or `memtester`. For example, to stress the memory with `memtester`, install it first:

```bash
sudo yum install memtester
```

Then apply constant memory stress:

```bash
memtester <amount_of_memory_in_MB>
```

Replace `<amount_of_memory_in_MB>` with the desired amount of memory.

### 3. **I/O Stress:**
Tools like `fio` or `dd` can be used to stress I/O. For example, to stress disk I/O with `fio`:

```bash
sudo yum install fio
```

Create an I/O stress file (e.g., `iostress.fio`) with the following content:

```ini
[iostress]
rw=randwrite
size=1G
```

Then run the stress test:

```bash
fio iostress.fio
```

### 4. **Network Stress:**
For network stress, tools like `iperf` can be used. Install it first:

```bash
sudo yum install iperf
```

Run the `iperf` server on one machine:

```bash
iperf -s
```

Run the `iperf` client on another machine to simulate network stress:

```bash
iperf -c <server_ip>
```

Remember to tailor these commands based on your specific requirements and system capacity. Also, be cautious when applying constant stress, as it may impact system responsiveness and stability. It's usually better to perform such stress testing on non-production systems.